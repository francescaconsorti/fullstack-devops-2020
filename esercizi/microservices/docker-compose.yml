version: '3'
services:
  reverse-proxy:
    image: traefik
    command: --api.insecure=true --providers.docker --providers.docker.exposedByDefault=false
    restart: "no"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  microservice-hextorgb:
    build: microservice-hextorgb
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-hextorgb.rule=PathPrefix(`/microservice-hextorgb`)"
      - "traefik.http.routers.microservice-hextorgb.middlewares=microservice-hextorgb-stripprefix"
      - "traefik.http.services.microservice-hextorgb.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.microservice-hextorgb-stripprefix.stripprefix.prefixes=/microservice-hextorgb"
  
  microservice-rgbtocmyk:
    build: microservice-rgbtocmyk
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-rgbtocmyk.rule=PathPrefix(`/microservice-rgbtocmyk`)"
      - "traefik.http.routers.microservice-rgbtocmyk.middlewares=microservice-rgbtocmyk-stripprefix"
      - "traefik.http.services.microservice-rgbtocmyk.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.microservice-rgbtocmyk-stripprefix.stripprefix.prefixes=/microservice-rgbtocmyk"
  
  microservice-cmyktohsl:
    build: microservice-cmyktohsl
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-cmyktohsl.rule=PathPrefix(`/microservice-cmyktohsl`)"
      - "traefik.http.routers.microservice-cmyktohsl.middlewares=microservice-cmyktohsl-stripprefix"
      - "traefik.http.services.microservice-cmyktohsl.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.microservice-cmyktohsl-stripprefix.stripprefix.prefixes=/microservice-cmyktohsl"



#  <microservice-example-name>:
#    build: <microservice-example-name>
#    restart: "no"
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.<microservice-example-name>.rule=PathPrefix(`/<microservice-example-name>`)"
#      - "traefik.http.routers.<microservice-example-name>.middlewares=<microservice-example-name>-stripprefix"
#      - "traefik.http.services.<microservice-example-name>.loadbalancer.server.port=3000"
#      - "traefik.http.middlewares.<microservice-example-name>-stripprefix.stripprefix.prefixes=/<microservice-example-name>"
